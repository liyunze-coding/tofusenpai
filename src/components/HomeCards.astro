---
// subcomponents
import LeftCard from "./SubComponents/LeftCard.astro";
import RightCard from "./SubComponents/RightCard.astro";
---

<div id="home-cards" class="w-full relative hidden lg:block">
	<!-- LeftCard = Card on the left side -->
	<LeftCard
		href="/give-me-love"
		src="/film-images/give-me-love.webp"
		alt="Give Me Love"
		eager={true}
		heading="GIVE ME LOVE"
		subheading="(SHORT FILM)"
		x="-10px"
		y="0px"
		z="16"
		rotation="-6.15deg"
	/>
	<RightCard
		href="/daydreamers"
		src="/film-images/daydreamers.webp"
		alt="Daydreamers"
		heading="DAYDREAMERS"
		subheading="(OFF-BROADWAY SHOW)"
		eager={false}
		x="10px"
		y="240px"
		z="15"
		rotation="3deg"
	/>
	<LeftCard
		href="/grimes"
		src="/film-images/grimes.webp"
		alt="Grimes Coachella 2024"
		heading="GRIMES COACHELLA 2024"
		subheading="(MULTIMEDIA LIVE SHOW)"
		eager={false}
		x="10px"
		y="500px"
		z="14"
		rotation="-6.15deg"
	/>
	<RightCard
		href="/garden"
		src="/film-images/garden.webp"
		alt="Gratitude Garden"
		heading="GRATITUDE GARDEN"
		subheading="(AR EXPERIENCE)"
		eager={false}
		x="-10px"
		y="720px"
		z="13"
		rotation="5deg"
	/>
	<LeftCard
		href="/asfar"
		src="/film-images/rainbows.webp"
		alt="A short film about rainbows"
		heading="A SHORT FILM ABOUT RAINBOWS"
		subheading="(ANIMATION)"
		eager={false}
		x="10px"
		y="1000px"
		z="12"
		rotation="-5.15deg"
	/>
	<RightCard
		href="/shark-bait"
		src="/film-images/sharkbait.webp"
		alt="Shark Bait"
		heading="SHARKBAIT"
		subheading="(SHORT FILM)"
		eager={false}
		x="0px"
		y="1250px"
		z="11"
		rotation="5deg"
	/>
	<LeftCard
		src="/film-images/twitchcon.webp"
		alt="Samsung x Twitch con 2023"
		heading="SAMSUNG X TWITCH CON 2023"
		subheading="(SHORT DOCUMENTARY)"
		eager={false}
		x="0px"
		y="1480px"
		z="10"
		rotation="-3.15deg"
	/>
	<RightCard
		href="/heavenmade"
		src="/film-images/heavenmade.webp"
		alt="Heavenmade"
		heading="HEAVENMADE"
		subheading="(MOVEMENT DIRECTION)"
		eager={false}
		x="0px"
		y="1750px"
		z="9"
		rotation="5deg"
	/>
	<LeftCard
		href="/tell-the-girl"
		src="/film-images/tell-the-girl.webp"
		alt="Tell the girl"
		heading="TELL THE GIRL"
		subheading="(MUSIC VIDEO)"
		eager={false}
		x="0px"
		y="2000px"
		z="8"
		rotation="-5.15deg"
	/>
	<RightCard
		href="/creator-culture"
		src="/film-images/creator-culture.webp"
		alt="Creator Culture"
		heading="CREATOR CULTURE"
		subheading="(DOCUMENTARY)"
		eager={false}
		x="0px"
		y="2250px"
		z="7"
		rotation="2deg"
	/>
	<LeftCard
		src="/film-images/do-i-know-you.webp"
		alt="Do I Know You"
		heading="DO I KNOW YOU?"
		subheading="(SHORT FILM)"
		eager={false}
		x="0px"
		y="2500px"
		z="6"
		rotation="-5.15deg"
	/>

	<div class="background-blur"></div>
</div>

<style is:global lang="scss">
	:root {
		--cards-margin-top: 5rem; /* adjust the margin top  */
		--cards-height: 2900px; /* adjust the cards component total height*/
	}

	#home-cards {
		margin-top: var(--cards-margin-top);
		height: var(--cards-height);
	}

	.project {
		z-index: 3;
		transition:
			transform 600ms ease-in,
			filter 300ms ease-in,
			opacity 300ms ease-in;
	}

	.text-box {
		line-height: 28px;
		font-size: 28px;
		opacity: 0;
		transition: opacity 600ms ease;
	}

	// non hovering cards -> blurred
	#home-cards:has(.project:hover) .project:not(.project:hover) {
		filter: blur(3px);
	}

	// links in paragraph be blurred on picture hover
	#homepage:has(.project:hover) p > a {
		z-index: 0;
	}

	.project-img {
		transition:
			transform 300ms ease,
			filter 300ms ease;
		filter: grayscale(100%);
	}

	.project:hover {
		.project-img {
			transform: none;
			filter: none;
		}

		.text-box {
			opacity: 100%;
		}

		~ .background-blur {
			backdrop-filter: blur(3px);
		}
	}

	.background-blur {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		backdrop-filter: none;
		z-index: 1;
		transition: backdrop-filter 350ms ease;
	}
</style>

<script is:inline>
	document.addEventListener("astro:page-load", () => {
		let savedIndex = -1;

		let cards = document.getElementsByClassName("project");

		const resetCardIndex = () => {
			for (let x = 0; x < cards.length; x++) {
				cards[x].style.zIndex = cards[x].getAttribute("data-z-index");
			}
		};

		const computeNewZIndex = (i) => {
			let leftNeighbour = 0;
			let rightNeighbour = 0;
			if (i !== 0) {
				leftNeighbour = parseInt(cards[i - 1].style.zIndex);
			}
			if (i !== cards.length - 1) {
				rightNeighbour = parseInt(cards[i + 1].style.zIndex);
			}

			let newZIndex = Math.max(leftNeighbour, rightNeighbour) + 1;
			return newZIndex;
		};

		for (let i = 0; i < cards.length; i++) {
			resetCardIndex();
			cards[i].addEventListener("mouseover", () => {
				if (i !== savedIndex) {
					savedIndex = i;
				} else {
					return;
				}

				let newZIndex = computeNewZIndex(i);

				if (newZIndex > 40) {
					resetCardIndex();
					newZIndex = computeNewZIndex(i);
				}

				cards[i].style.zIndex = newZIndex;
			});
		}
	});
</script>
